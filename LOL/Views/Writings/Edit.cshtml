@model LOL.Models.Writing

@{
    ViewBag.Title = "Edit";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>Edit Actor</h2>


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.WritingId)

                    <div class="form-group">
                        <label class"control-label col-md-2" for="MovieID"> Movie Selection</label>
                        <div class="col-md-10">
                            @Html.DropDownList("FilmId")
                            @Html.ValidationMessageFor(model => model.FilmId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group2">
                        <label class"control-label col-md-2" for="PersonID"> Actor Selection</label>
                        <div class="col-md-10">
                            @Html.DropDownList("PersonId")
                            @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group1">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn actionBtn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="editLinks">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
